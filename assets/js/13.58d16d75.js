(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{213:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"data-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-types"}},[t._v("#")]),t._v(" Data Types")]),t._v(" "),a("ul",[a("li",[t._v("Rust is "),a("em",[t._v("statically typed")]),t._v(", i.e. types of all variables must be known at compile time")]),t._v(" "),a("li",[t._v("compiler can often infer type based on value and context")])]),t._v(" "),a("h2",{attrs:{id:"scalar-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scalar-types"}},[t._v("#")]),t._v(" Scalar Types")]),t._v(" "),a("ul",[a("li",[t._v("single value type")]),t._v(" "),a("li",[t._v("four primary ones:\n"),a("ul",[a("li",[t._v("integers")]),t._v(" "),a("li",[t._v("floating-point numbers")]),t._v(" "),a("li",[t._v("Booleans")]),t._v(" "),a("li",[t._v("characters")])])])]),t._v(" "),a("h3",{attrs:{id:"integers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#integers"}},[t._v("#")]),t._v(" Integers")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Length")]),t._v(" "),a("th",[t._v("Signed")]),t._v(" "),a("th",[t._v("Unsigned")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("8-bit")]),t._v(" "),a("td",[a("code",[t._v("i8")])]),t._v(" "),a("td",[a("code",[t._v("u8")])])]),t._v(" "),a("tr",[a("td",[t._v("16-bit")]),t._v(" "),a("td",[a("code",[t._v("i16")])]),t._v(" "),a("td",[a("code",[t._v("u16")])])]),t._v(" "),a("tr",[a("td",[t._v("32-bit")]),t._v(" "),a("td",[a("code",[t._v("i32")])]),t._v(" "),a("td",[a("code",[t._v("u32")])])]),t._v(" "),a("tr",[a("td",[t._v("64-bit")]),t._v(" "),a("td",[a("code",[t._v("i64")])]),t._v(" "),a("td",[a("code",[t._v("u64")])])]),t._v(" "),a("tr",[a("td",[t._v("128-bit")]),t._v(" "),a("td",[a("code",[t._v("i128")])]),t._v(" "),a("td",[a("code",[t._v("u128")])])]),t._v(" "),a("tr",[a("td",[t._v("arch")]),t._v(" "),a("td",[a("code",[t._v("isize")])]),t._v(" "),a("td",[a("code",[t._v("usize")])])])])]),t._v(" "),a("p",[t._v("In "),a("strong",[t._v("debug mode")]),t._v(", Rust includes checks for integer overflows and will "),a("em",[t._v("panic")]),t._v("\n(exit with error) if an overflow is detected.\nIn "),a("strong",[t._v("release mode")]),t._v(" those checks are not included and Rust will instead perform\n"),a("em",[t._v("two's complement wrapping")]),t._v(", e.g. a "),a("code",[t._v("u8")]),t._v(" 256 becomes 0, 257 becomes 1 etc.\nFor explicit wrapping one should use the "),a("code",[t._v("Wrapping")]),t._v(" type.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Number literals")]),t._v(" "),a("th",[t._v("Example")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Decimal")]),t._v(" "),a("td",[a("code",[t._v("98_222")])])]),t._v(" "),a("tr",[a("td",[t._v("Hex")]),t._v(" "),a("td",[a("code",[t._v("0xff")])])]),t._v(" "),a("tr",[a("td",[t._v("Octal")]),t._v(" "),a("td",[a("code",[t._v("0o77")])])]),t._v(" "),a("tr",[a("td",[t._v("Binary")]),t._v(" "),a("td",[a("code",[t._v("0b1111_0000")])])]),t._v(" "),a("tr",[a("td",[t._v("Byte ("),a("code",[t._v("u8")]),t._v(" only)")]),t._v(" "),a("td",[a("code",[t._v("b'A'")])])])])]),t._v(" "),a("ul",[a("li",[t._v("all number literals except byte allow type suffix such as "),a("code",[t._v("57u8")]),t._v("\nand "),a("code",[t._v("_")]),t._v(" as visual separator, such as "),a("code",[t._v("1_000")])]),t._v(" "),a("li",[t._v("default integer type is "),a("code",[t._v("i32")]),t._v(" which is generally the fastest, even on 64-bit systems")]),t._v(" "),a("li",[a("code",[t._v("isize")]),t._v(" or "),a("code",[t._v("usize")]),t._v(" are architecture-dependent (size is 32 or 64 bits) and are typically\nused when indexing a collection")])]),t._v(" "),a("h3",{attrs:{id:"floats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#floats"}},[t._v("#")]),t._v(" Floats")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("f32")]),t._v(" 32 bits, single precision, IEEE-754")]),t._v(" "),a("li",[a("code",[t._v("f64")]),t._v(" (default) 64 bits, double precision, IEEE-754")])]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f64")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" f32 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// f32")]),t._v("\n")])])]),a("h3",{attrs:{id:"booleans"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#booleans"}},[t._v("#")]),t._v(" Booleans")]),t._v(" "),a("ul",[a("li",[t._v("type specified using "),a("code",[t._v("bool")])]),t._v(" "),a("li",[t._v("two possible values: "),a("code",[t._v("true")]),t._v(" and "),a("code",[t._v("false")])])]),t._v(" "),a("h3",{attrs:{id:"characters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#characters"}},[t._v("#")]),t._v(" Characters")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("char")]),t._v(" type")]),t._v(" "),a("li",[t._v("4 bytes, Unicode Scalar Value")])]),t._v(" "),a("h2",{attrs:{id:"compound-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compound-types"}},[t._v("#")]),t._v(" Compound Types")]),t._v(" "),a("ul",[a("li",[t._v("types grouping multiple values")]),t._v(" "),a("li",[t._v("two primitive ones:\n"),a("ul",[a("li",[t._v("tuples")]),t._v(" "),a("li",[t._v("arrays")])])])]),t._v(" "),a("h3",{attrs:{id:"tuples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tuples"}},[t._v("#")]),t._v(" Tuples")]),t._v(" "),a("ul",[a("li",[t._v("can group different types")]),t._v(" "),a("li",[t._v("fixed size, i.e. cannot grow or shrink")])]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// destructure via pattern matching:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// access directly by index via `.`:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" five_hundred "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"arrays"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arrays"}},[t._v("#")]),t._v(" Arrays")]),t._v(" "),a("ul",[a("li",[t._v("group values of same type")]),t._v(" "),a("li",[t._v("fixed length")]),t._v(" "),a("li",[t._v("allocated on stack not heap")])]),t._v(" "),a("div",{staticClass:"language-rust extra-class"},[a("pre",{pre:!0,attrs:{class:"language-rust"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// with type annotation and explicit size:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// access via `[index]`:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" first "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compile-time error:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" element "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// run-time error:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" element "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);