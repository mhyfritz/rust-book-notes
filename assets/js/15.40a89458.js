(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{215:function(a,t,s){"use strict";s.r(t);var e=s(0),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"variables-and-mutability"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#variables-and-mutability"}},[a._v("#")]),a._v(" Variables and Mutability")]),a._v(" "),s("p",[a._v("By default, variables are "),s("strong",[a._v("immutable")])]),a._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// compile-time error")]),a._v("\n")])])]),s("p",[a._v("Variables can be made mutable by adding "),s("code",[a._v("mut")]),a._v(" in front of variable name")]),a._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("mut")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nx "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// this is fine")]),a._v("\n")])])]),s("h2",{attrs:{id:"constants"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constants"}},[a._v("#")]),a._v(" Constants")]),a._v(" "),s("ul",[s("li",[a._v("declared using "),s("code",[a._v("const")])]),a._v(" "),s("li",[a._v("must have type annotation")]),a._v(" "),s("li",[a._v("can be declared in any scope, including global one")]),a._v(" "),s("li",[a._v("cannot be set to a value computed at runtime, e.g. function call result")]),a._v(" "),s("li",[a._v("naming convention: all uppercase with underscores")])]),a._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// u32 is 32-bit unsigned integer")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// underscores can be used in numeric literals to improve readability")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" MAX_POINTS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" u32 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100_000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"shadowing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shadowing"}},[a._v("#")]),a._v(" Shadowing")]),a._v(" "),s("ul",[s("li",[a._v("new variable can be declared with same name as a previous one")]),a._v(" "),s("li",[a._v("new variable "),s("em",[a._v("shadows")]),a._v(" the previous one")]),a._v(" "),s("li",[a._v("useful to apply series of transformations, but have variable end up immutable\n(using "),s("code",[a._v("mut")]),a._v(", variable would stay mutable)")]),a._v(" "),s("li",[a._v("allows reusing name but changing type")])]),a._v(" "),s("div",{staticClass:"language-rust extra-class"},[s("pre",{pre:!0,attrs:{class:"language-rust"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" spaces "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"   "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" spaces "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" spaces"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// type changes")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);